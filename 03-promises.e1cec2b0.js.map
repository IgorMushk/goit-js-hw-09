{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,SACxBD,SAASC,cAAc,yBAqB3C,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CA9BbL,EAAaa,iBAAiB,UAE9B,SAAkBC,GAChBA,EAAIC,iBACJ,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAClD,IAAIC,EAAWC,OAAON,EAAMO,OAC5B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOJ,EAAOK,OAAQC,GAAK,EAC9CrB,EAAcqB,EAAGH,GACdI,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA4B,OAAOC,QAAQ,qBAAqBvB,QAAeC,MAAU,IAE9DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA4B,OAAOG,QAAQ,oBAAoBzB,QAAeC,MAAU,IAGhEgB,GAAYC,OAAOL,EAAKM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formPromises = document.querySelector('.form');\nconst btnPromises = document.querySelector('button[type=\"submit\"]');\n\nformPromises.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let delyStep = Number(delay.value);\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    createPromise(i, delyStep)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delyStep += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      }\n      // Reject\n      reject({ position, delay });\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formPromises","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","delyStep","Number","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.e1cec2b0.js.map"}